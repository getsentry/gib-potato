{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { captureException } from '@sentry/browser';\nimport { Transaction, TransactionContext, TransactionSource } from '@sentry/types';\n\nexport type VueRouterInstrumentation = <T extends Transaction>(\n  startTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad?: boolean,\n  startTransactionOnLocationChange?: boolean,\n) => void;\n\n// The following type is an intersection of the Route type from VueRouter v2, v3, and v4.\n// This is not great, but kinda necessary to make it work with all versions at the same time.\nexport type Route = {\n  /** Unparameterized URL */\n  path: string;\n  /**\n   * Query params (keys map to null when there is no value associated, e.g. \"?foo\" and to an array when there are\n   * multiple query params that have the same key, e.g. \"?foo&foo=bar\")\n   */\n  query: Record<string, string | null | (string | null)[]>;\n  /** Route name (VueRouter provides a way to give routes individual names) */\n  name?: string | symbol | null | undefined;\n  /** Evaluated parameters */\n  params: Record<string, string | string[]>;\n  /** All the matched route objects as defined in VueRouter constructor */\n  matched: { path: string }[];\n};\n\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next: () => void) => void) => void;\n}\n\n/**\n * Creates routing instrumentation for Vue Router v2\n *\n * @param router The Vue Router instance that is used\n */\nexport function vueRouterInstrumentation(router: VueRouter): VueRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    router.onError(error => captureException(error));\n\n    router.beforeEach((to, from, next) => {\n      // According to docs we could use `from === VueRouter.START_LOCATION` but I couldnt get it working for Vue 2\n      // https://router.vuejs.org/api/#router-start-location\n      // https://next.router.vuejs.org/api/#start-location\n\n      // from.name:\n      // - Vue 2: null\n      // - Vue 3: undefined\n      // hence only '==' instead of '===', because `undefined == null` evaluates to `true`\n      const isPageLoadNavigation = from.name == null && from.matched.length === 0;\n\n      const tags = {\n        'routing.instrumentation': 'vue-router',\n      };\n      const data = {\n        params: to.params,\n        query: to.query,\n      };\n\n      // Determine a name for the routing transaction and where that name came from\n      let transactionName: string = to.path;\n      let transactionSource: TransactionSource = 'url';\n      if (to.name) {\n        transactionName = to.name.toString();\n        transactionSource = 'custom';\n      } else if (to.matched[0] && to.matched[0].path) {\n        transactionName = to.matched[0].path;\n        transactionSource = 'route';\n      }\n\n      if (startTransactionOnPageLoad && isPageLoadNavigation) {\n        startTransaction({\n          name: transactionName,\n          op: 'pageload',\n          tags,\n          data,\n          metadata: {\n            source: transactionSource,\n          },\n        });\n      }\n\n      if (startTransactionOnLocationChange && !isPageLoadNavigation) {\n        startTransaction({\n          name: transactionName,\n          op: 'navigation',\n          tags,\n          data,\n          metadata: {\n            source: transactionSource,\n          },\n        });\n      }\n\n      next();\n    });\n  };\n}\n"],"names":[],"mappings":";;;;AAgCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;"}